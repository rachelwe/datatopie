(function(){"use strict";function t(t){let s={x:t.rows[0].cells[0].innerHTML,y:t.rows[0].cells[1].innerHTML};let i=[];for(var e=1;e<t.rows.length;e++){var a=t.rows[e];var h={x:a.cells[0].innerHTML,y:a.cells[1].innerHTML};i.push(h)}return[s,i]}function s(t,s,i){var e;return function(){var a=this,h=arguments;var n=function(){e=null;if(!i)t.apply(a,h)};var o=i&&!e;clearTimeout(e);e=setTimeout(n,s);if(o)t.apply(a,h)}}var i=function(t,s){s.forEach((function(s){s=Object.entries(s)[0];t.setAttributeNS(null,s[0],s[1])}))};function e(t,s,e,a){const h="http://www.w3.org/2000/svg";const n=document.createElementNS(h,s);i(n,e);if(a){n.textContent=a}t.appendChild(n);return n}function a(t,s,i){var e=s-t,a=Math.pow(10,Math.floor(Math.log(e/i)/Math.LN10)),h=i/e*a;if(h<=.15)a*=10;else if(h<=.35)a*=5;else if(h<=.75)a*=2;var n=Math.ceil(t/a)*a,o=Math.floor(s/a)*a+a*.5,r=[];for(let t=n;t<o;t+=a){r.push(t)}return r}function h(t,s){return(s?s:document).querySelector(t)}class n{constructor(t,s,i){this.node=t;this.datas=s;this.config=i;this.template=`<title id="title">${this.config.mainTitle}</title>`;this.svgGraph=t;this.svgGraphInner=h("svg",this.svgGraph);this.tooltips=h("[data-tooltips]",this.svgGraph);this.toggle=h("[data-graph-toggle]",this.svgGraph);this.svgDatasWrapper;this.svgLine;this.svgLabelsX;this.svgLabelsY;this.svgGridX;this.svgGridY;this.points="";this.positions=[];this.values=[];this.maxValue=0}debug(){console.log(this)}generateRelativePosition(){this.positions=[];this.values=[];this.datas.forEach((t=>{this.values.push(t.y)}));this.maxValue=Math.max(...this.values);this.values.forEach((t=>{this.positions.push(t/this.maxValue*this.config.scaleY)}))}setPoints(){this.positions.forEach(((t,s)=>{const a={x:this.config.startGraph+s*this.config.scaleX,y:this.config.offsetY+(this.config.scaleY-t)};this.points+=a.x+", "+a.y+" ";this.svgLine.setAttributeNS(null,"points",this.points);e(this.svgDatasWrapper,"circle",[{cx:a.x},{cy:a.y},{r:4},{tabindex:0},{role:"img"},{"aria-labelledby":"graph_tooltip"+s},{"data-value":this.values[s]}]);e(this.svgLabelsX,"text",[{x:a.x},{y:this.config.offsetY+this.config.scaleY+20},{transform:"rotate(-45, "+a.x+", "+(this.config.offsetY+this.config.scaleY+20)+")"}],this.datas[s].x);const h=document.createElement("div");h.setAttribute("style",`left: ${a.x-15}px; top: ${a.y-65}px`);h.setAttribute("class","graph_tooltip");h.setAttribute("id","graph_tooltip"+s);h.innerHTML=`\n        <p>${this.datas[s].x}</p>\n        <p>${this.datas[s].y} â‚¬</p>\n      `;this.tooltips.appendChild(h);if(s=this.positions.length-1){this.config.endGraph=a.x;i(this.svgLine,[{"stroke-dasharray":this.svgLine.getTotalLength()},{"stroke-dashoffset":this.svgLine.getTotalLength()},{style:"--stroke-size: "+this.svgLine.getTotalLength()}])}}))}setLegend(){e(this.svgGridX,"line",[{x1:this.config.startGraph},{x2:this.config.startGraph},{y1:this.config.offsetY},{y2:this.config.offsetY+this.config.scaleY}]);e(this.svgLabelsX,"text",[{x:this.config.endGraph/2+this.config.startGraph/2},{y:this.config.scaleY+this.config.labelsSizeX+this.config.offsetY/2},{class:"label-title"}],this.config.titleX);let t=a(0,this.maxValue,6);let s=[];t.forEach((t=>{s.push(t/this.maxValue*this.config.scaleY)}));s.forEach(((s,i)=>{const a=s;e(this.svgLabelsY,"text",[{x:this.config.startGraph-10},{y:this.config.offsetY+(this.config.scaleY-a)}],t[i]);e(this.svgGridY,"line",[{x1:this.config.startGraph},{x2:this.config.endGraph},{y1:this.config.offsetY+(this.config.scaleY-a)},{y2:this.config.offsetY+(this.config.scaleY-a)}])}));e(this.svgLabelsY,"text",[{x:this.config.startGraph-10},{y:this.config.offsetY/2},{class:"label-title"}],this.config.titleY)}setGraphSize(){const t=this.config.endGraph+10;const s=this.config.scaleY+this.config.labelsSizeX+this.config.offsetY;i(this.svgGraphInner,[{viewBox:"0 0 "+t+" "+s},{width:t},{height:s}]);this.svgGraph.style.setProperty("--graph-width",t+"px")}setBreakpoints(){if(window.matchMedia(`(max-width: 400px)`).matches){this.config.scaleX=20;this.config.scaleY=60}else if(window.matchMedia(`(max-width: 700px) and (min-width: 401px)`).matches){this.config.scaleX=35;this.config.scaleY=100}else{this.config.scaleX=50;this.config.scaleY=150}}events(){window.addEventListener("resize",s(this.draw(),200));["mouseenter","focus"].forEach((t=>{this.svgGraphInner.addEventListener(t,(s=>{if(t=="focus")s.target.classList.add("is-focused");if(s.target.matches("circle")){const t=s.target.getAttribute("aria-labelledby");const i=document.getElementById(t);i.classList.add("is-active")}}),true)}));["mouseleave","blur"].forEach((t=>{this.svgGraphInner.addEventListener(t,(s=>{if(t=="blur")s.target.classList.remove("is-focused");if(s.target.matches("circle")){const t=s.target.getAttribute("aria-labelledby");const i=document.getElementById(t);if(!s.target.classList.contains("is-focused")){i.classList.remove("is-active")}}}),true)}));this.toggle.addEventListener("click",(()=>{const t=document.querySelectorAll("[data-toggle-state]");t.forEach((t=>{const s=t.getAttribute("data-toggle-state");let i=t.getAttribute("data-toggle-name");if(s=="true"){this.toggle.innerHTML="affichage "+i}t.setAttribute("data-toggle-state",s=="true"?false:true)}))}))}draw(){this.points=0;this.positions=[];this.svgGraphInner.innerHTML=this.template;this.tooltips.innerHTML="";this.svgDatasWrapper=h("[data-datas]",this.svgGraph);this.svgLine=h("[data-line]",this.svgGraph);this.svgLabelsX=h('[data-labels="x"]',this.svgGraph);this.svgLabelsY=h('[data-labels="y"]',this.svgGraph);this.svgGridX=h('[data-grid="x"]',this.svgGraph);this.svgGridY=h('[data-grid="y"]',this.svgGraph);this.setBreakpoints();this.generateRelativePosition();this.setPoints();this.setLegend();this.setGraphSize()}}class o extends n{constructor(t,s,i){super(t,s,i);this.template=`\n    <title id="title">${this.config.mainTitle}</title>\n    <g class="graph_grid graph_grid--x" id="xGrid" data-grid="x"></g>\n    <g class="graph_grid graph_grid--y" id="yGrid" data-grid="y"></g>\n    <g class="graph_labels graph_labels--x" data-labels="x"></g>\n    <g class="graph_labels graph_labels--y" data-labels="y"></g>\n    <g class="graph_data" data-datas>\n      <polyline data-line points="" />\n    </g>\n    `}}const r=h("[data-graph]");const l=h("[data-graph-table]");let[g,c]=t(l);let f={mainTitle:"A very simple line chart about income",titleY:g.y,titleX:g.x,labelsSizeY:55,labelsSizeX:120,scaleY:150,scaleX:50,startGraph:65,endGraph:0,offsetY:35};const d=new o(r,c,f);d.debug();d.draw();d.events()})();